% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wnn.R
\name{wnn}
\alias{wnn}
\title{Weighted Nearest Neighbours}
\usage{
wnn(formula, data, subset, na.action)
}
\arguments{
\item{formula}{an object of class "formula" (or one that can be coerced to
that class): a symbolic description of the model to be fitted.}

\item{data}{a data frame or a matrix, containing the variables in the model.}

\item{subset}{an optional vector specifying a subset of observations to be
used in the fitting process.}

\item{na.action}{a function which indicates what should happen when the
data contain NAs. The default is set by the na.action setting of
\link[base]{options}, and is \link[stats]{na.fail} if that is unset. The
factory-fresh default is \link[stats]{na.omit}. Another possible value
is NULL, no action. Value \link[stats]{na.exclude} can be useful.}
}
\value{
Function returns \code{model} - the final model of the class
"wnn", which contains:
\itemize{
\item fitted - fitted values,
\item residuals - residuals of the model,
\item call - how the model was called,
\item data - data used for the model construction,
\item weights - the matrix of weights for each observation. The columns
contain weights between the current obsrevation and all the others in sample.
}
}
\description{
Function prepares the data and produces weights, fitted and residuals for the
combined values based on Weighted Nearest Neighbours
}
\details{
This function measures distance from each observation to the provided data,
calculates Gower's coefficient based on the provided explanatory variables
and then returns a weighted average based on it for each observation. This
is a non-parametric method for calculating averages based on a set of
explanatory variables
}
\examples{

### An example with mtcars data and factors
mtcars2 <- within(mtcars, {
   vs <- factor(vs, labels = c("V", "S"))
   am <- factor(am, labels = c("automatic", "manual"))
   cyl  <- factor(cyl)
   gear <- factor(gear)
   carb <- factor(carb)
})
# The standard model with Log Normal distribution
ourModel <- wnn(mpg~., mtcars2[1:30,])

# Produce predictions with the one sided interval (upper bound)
predict(ourModel, mtcars2[-c(1:30),])
plot(predict(ourModel, mtcars2[-c(1:30),]))

}
\seealso{
\code{\link[greybox]{alm}, \link[greybox]{lmCombine}}
}
\author{
Carlos Eduardo Rodriguez Calderon

Ivan Svetunkov
}
\keyword{mdoels}
\keyword{nonparametric}
